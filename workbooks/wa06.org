#+TITLE: Week 06 Workbook
#+AUTHOR: Bryan Muller
#+LANGUAGE: en
#+OPTIONS: H:4 num:nil toc:nil \n:nil @:t ::t |:t ^:t *:t TeX:t LaTeX:t ':t
#+OPTIONS: html-postamble:nil
#+STARTUP: entitiespretty inlineimages

* Monday, Feb 11
** CDL

#+BEGIN_SRC dot :file cdlFeb11.png
digraph {
	graph [rankdir=LR]
	EMPTY [label="" shape=plaintext]
	S2 [label=S2 peripheries=1 shape=circle]
  B [label=B peripheries=1 shape=circle]
  E [label=E peripheries=2 shape=circle]
	IF1 [label=IF1 peripheries=1 shape=circle]
	F3 [label=F3 peripheries=1 shape=circle]
  EMPTY -> B
	B -> IF1 [label=""]
	IF1 -> S2 [label=a]
	IF1 -> S2 [label=b]
	S2 -> S2 [label=a]
	S2 -> F3 [label=b]
	F3 -> IF1 [label=a]
	F3 -> S2 [label=b]
  IF1 -> E [label=""]
  F3 -> E [label=""]
}
#+END_SRC

[[file:cdlFeb11.png]]


* Chapter 9 [50%]
** DONE Exercise 9.2: NFA to RE
   CLOSED: [2019-02-13 Wed 20:29]
*** 1.
Deleting the "X" state last produced the smaller regular expression. This is due
to the nature of how states are removed from the NFA. If we remove the "busy"
state last, then most of the states leading to it have already been collapsed,
leading to less states needing to be collapsed in the final iteration.
**** a.
Delete Order:
#+BEGIN_EXAMPLE
["I1", "I2","I3", "F1","F2", "X"]
#+END_EXAMPLE

Produced Regex:
#+BEGIN_EXAMPLE
'(((c + ((b + a) + a)) + ((b + a) + a)) (((p + q))* ((n + m) + m)))'
#+END_EXAMPLE

Delete Order

**** b
Delete order:
#+BEGIN_EXAMPLE
["X", "I1", "I2", "I3", "F1", "F2"]
#+END_EXAMPLE
Produced Regex:
#+BEGIN_EXAMPLE
'(((((c (((p + q))* n)) + (((b (((p + q))* n)) + (a (((p + q))* n))) + (a (((p + q))* n)))) + (((b (((p + q))* n)) + (a (((p + q))* n))) + (a (((p + q))* n)))) + (((c (((p + q))* m)) + (((b (((p + q))* m)) + (a (((p + q))* m))) + (a (((p + q))* m)))) + (((b (((p + q))* m)) + (a (((p + q))* m))) + (a (((p + q))* m))))) + (((c (((p + q))* m)) + (((b (((p + q))* m)) + (a (((p + q))* m))) + (a (((p + q))* m)))) + (((b (((p + q))* m)) + (a (((p + q))* m))) + (a (((p + q))* m)))))'
#+END_EXAMPLE

*** 2.
Heuristically, it seems better to eliminate the busy state last. This is due to
the reason I explained above. This could perhaps change based on the nfa and the
number of "busy" states.

*** 3.
We could always convert them back to an nfa and check for language equivelance.

** TODO Exercise 9.5: nfa2re: RE Size
*** 1.
#+BEGIN_SRC python
  md2mc('''
  NFA
  I : '' -> A
  I : '' -> G
  A : '' -> C
  A : '' -> B
  B : 1 -> D
  C : 0 -> E
  D : '' -> G
  E : '' -> A
  E : '' -> G
  G : 1 -> F
  ''')
#+END_SRC

**** Step 1.
     Add real I (S) and real F (Q)
#+BEGIN_SRC python
  md2mc('''
  NFA
  S : '' -> I
  I : '' -> A
  I : '' -> G
  A : '' -> C
  A : '' -> B
  B : 1 -> D
  C : 0 -> E
  D : '' -> G
  E : '' -> A
  E : '' -> G
  G : 1 -> F
  F : '' -> Q 
  ''')
#+END_SRC
| SI | = | \epsilon |
| IA | = | \epsilon |
| IG | = | \epsilon |
| AB | = | \epsilon |
| AC | = | \epsilon |
| BD | = | 1 |
| CE | = | 0 |
| DG | = | \epsilon |
| EA | = | \epsilon |
| EG | = | \epsilon |
| GF | = | 1 |
| FQ | = | \epsilon |

**** Remove I
i = S, j = a
R1_a = \epsilon, R2_a = \empty, R3_a = \epsilon, R4_a = \empty
i = S, j = g
R1_g = \epsilon, R2_g = \empty, R3_g = \epsilon, R4_g = \empty
| SA | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| SG | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| AB | = | \epsilon                | = | \epsilon |
| AC | = | \epsilon                | = | \epsilon |
| BD | = | 1                | = | 1 |
| CE | = | 0                | = | 0 |
| DG | = | \epsilon                | = | \epsilon |
| EA | = | \epsilon                | = | \epsilon |
| EG | = | \epsilon                | = | \epsilon |
| GF | = | 1                | = | 1 |
| FQ | = | \epsilon                | = | \epsilon |

**** Remove A
i = S, j = b
R1_B = \epsilon, R2_B = \empty, R3_B = \epsilon, R4_B = \empty
i = S, j = c
R1_C = \epsilon, R2_C = \empty, R3_C = \epsilon, R4_C = \empty
i = E, j = E
R1_E = \epsilon, R2_E = \empty, R3_E = \empty, R4_C = \empty
| SB | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| SC | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| SG | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| BD | = | 1                | = | 1 |
| CE | = | 0                | = | 0 |
| DG | = | \epsilon                | = | \epsilon |
| ES | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| EG | = | \epsilon                | = | \epsilon |
| GF | = | 1                | = | 1 |
| FQ | = | \epsilon                | = | \epsilon |

**** Remove B
i = S, j = D
R1 = \epsilon, R2 = \empty, R3 = 1, R4 = \empty 
| SC | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| SD | = | (\epsilon)(\empty)^*(1) \cup (\empty) | = | 1 |
| SG | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| CE | = | 0                | = | 0 |
| DG | = | \epsilon                | = | \epsilon |
| ES | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| EG | = | \epsilon                | = | \epsilon |
| GF | = | 1                | = | 1 |
| FQ | = | \epsilon                | = | \epsilon |

**** Remove C
i = S, j = E
R1 = \epsilon, R2 = \empty, R3 = 0, R4 = \empty
| SD | = | (\epsilon)(\empty)^*(1) \cup (\empty) | = | 1 |
| SE | = | (\epsilon)(\empty)^*(0) \cup (\empty) | = | 0 |
| SG | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| DG | = | \epsilon                | = | \epsilon |
| ES | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| EG | = | \epsilon                | = | \epsilon |
| GF | = | 1                | = | 1 |
| FQ | = | \epsilon                | = | \epsilon |

**** Remove D
i = S, j = G
R1 = 1, R2 = \empty, R3 = \epsilon, R4 = \epsilon 

| SE | = | (\epsilon)(\empty)^*(0) \cup (\empty) | = | 0 |
| SG | = | (1)(\empty)^*(\epsilon) \cup (\epsilon) | = | 1 |
| ES | = | (\epsilon)(\empty)^*(\epsilon) \cup (\empty) | = | \epsilon |
| EG | = | \epsilon                | = | \epsilon |
| GF | = | 1                | = | 1 |
| FQ | = | \epsilon                | = | \epsilon |

**** Remove E
i = S, j = S
R1 = 0, R2 = \empty, R3 = \epsilon, R4 = \empty
i = S, j = G
R1 = 0, R2 = \empty, R3 = \epsilon, R4 = 1 
| SS | = | (0)(\empty)^*(\epsilon) \cup (\empty) | = |   0 |
| SG | = | (0)(\empty)^*(\epsilon) \cup (1) | = | 0+1 |
| GF | = | 1                | = |   1 |
| FQ | = | \epsilon                | = |   \epsilon |

**** Remove G
i = S, j = F
R1 = 0+1, R2 = \empty, R3 = 1, R4 = \empty
| SS | = | (0)(\empty)^*(\epsilon) \cup (\empty) | = |   0 |
|SF| = |(0+1)(\empty)^*(1) \cup (\empty) | = |(0+1)1
| FQ | = | \epsilon                | = |   \epsilon |

**** Remove F
i = S, j = Q
R1 = (0+1)1, R2 = \empty, R3 = \epsilon, R4 = \empty
| SS | = | (0)(\empty)^*(\epsilon) \cup (\empty)    | = |      0 |
| SQ | = | (0+1)1(\empty)^*(\epsilon) \cup (\empty) | = | (0+1)1 |

**** Final REGEX
   ((((0 ((0)* ((1 + "") + ""))) + ((1 + "") + "")) + ((1 + "") + "")) 1)

*** 2.

Very large, 2^N large.
*** 3.

Commented output: '(((((((a r) + "") + "") ((s)* p)) + (a q)) + (a q)) (((((t r)
((s)* p)) + (t q)) + (t q)))*)'

Uncommented output: '((((a b))* ((((((a r) + "") + "") ((s)* p)) + (a q)) + (a
q))) (((((t b) (((a b))* ((((((a r) + "") + "") ((s)* p)) + (a q)) + (a q)))) +
((((t r) ((s)* p)) + (t q)) + (t q))) + ((((t r) ((s)* p)) + (t q)) + (t
q))))*)'

This is due to the uncommented line creating a new loop back to the initial
state. This requires the algorithm to account for many more paths when trying to
remove the initial states, leading to a blow up.

*** 4. 


